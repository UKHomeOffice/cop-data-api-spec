---
kind: pipeline
type: kubernetes
name: default

platform:
  os: linux
  arch: amd64

steps:
- name: build
  pull: if-not-exists
  image: quay.io/ukhomeofficedigital/drone-docker
  commands:
  - docker build -t cop-data-api-spec:$${DRONE_COMMIT_SHA} .
  when:
    branch:
    - master
    event:
    - push

- name: vulnerability-scan
  pull: if-not-exists
  image: quay.io/ukhomeofficedigital/anchore-submission:latest
  settings:
    dockerfile: Dockerfile
    image_name: cop-data-api-spec:${DRONE_COMMIT_SHA}
    local_image: true
    tolerate: low
  when:
    branch:
    - master
    event:
    - push

- name: image_to_quay
  pull: if-not-exists
  image: quay.io/ukhomeofficedigital/drone-docker
  settings:
    registry: quay.io
    repo: quay.io/ukhomeofficedigital/cop-data-api-spec
    tags:
    - ${DRONE_BUILD_NUMBER}
    - ${DRONE_COMMIT_SHA}
    - latest
  environment:
    DOCKER_PASSWORD:
      from_secret: DOCKER_PASSWORD
    DOCKER_USERNAME:
      from_secret: DOCKER_USERNAME
  when:
    branch:
    - master
    event:
    - push
    - promote

- name: deploy_to_dev
  pull: if-not-exists
  image: quay.io/ukhomeofficedigital/kd
  commands:
  - kd --insecure-skip-tls-verify -f kube/deployment.yml -f kube/service.yml -f kube/ingress.yml -f kube/network-policy.yml
  environment:
    HOSTNAME:
      from_secret: DEV_HOSTNAME
    KUBE_NAMESPACE:
      from_secret: DEV_KUBE_NAMESPACE
    KUBE_SERVER:
      from_secret: DEV_KUBE_SERVER
    KUBE_TOKEN:
      from_secret: DEV_KUBE_TOKEN
  when:
    branch:
    - master
    event:
    - push
    - promote

- name: notify
  pull: if-not-exists
  image: plugins/slack
  settings:
    channel: cop-deployments
    template: "{{#build.deployTo}}\n  *{{repo.name}} - Build {{build.number}} - {{uppercasefirst build.deployTo}} - {{uppercase build.status}}*\n  {{build.link}}\n{{else}}\n  *{{repo.name}} - Build {{build.number}} - Development - {{uppercase build.status}}*\n  {{build.link}}\n{{/build.deployTo}}\n"
    username: Drone Build Watcher
  environment:
    SLACK_WEBHOOK:
      from_secret: SLACK_WEBHOOK
  when:
    branch:
    - master
    event:
    - push
    - promote
    status:
    - success
    - failure

...
